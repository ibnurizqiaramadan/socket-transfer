function addToConsole(e){Console_.append(`${moment(+new Date).format("YYYY.MM.DD-H:mm:ss")} - ${e}\n`),Console_.scrollTop(Console_[0].scrollHeight-Console_.height())}function appendServerIp(e){const t=$(`label[for="server-${e.replace(/\./g,"")}"]`);if(t.length>0){return}let o=`\n        <div class="form-check">\n            <input class="form-check-input" type="checkbox" value="${e}" \n            id="server-${e.replace(/\./g,"")}">\n            <label class="form-check-label text-danger" \n            for="server-${e.replace(/\./g,"")}">\n                ${e}\n            </label>\n        </div>\n    `;$("#server-list").append(o),$('input[id*="server-"]').change(function(e){const t=$('input[id*="server-"]:checked');$(this).val();Object.values(t).forEach(e=>{})})}function pingServer(){pingInterval=setInterval(()=>{serverList.forEach(e=>{socket.emit("ping",{ip:e.ip,time:+new Date})})},1e3)}function loadServerList(){socket.emit("getAllRooms"),pingServer()}const socketUrl=document.querySelector('meta[name="socket-url"]').getAttribute("content");let serverList=[];const serverListContainer=document.getElementById("server-list"),btnUpload=document.getElementById("btn-upload"),socket=io(socketUrl);let pingInterval;const Console_=$("#console");btnUpload.addEventListener("click",()=>{const e=document.getElementById("file"),t=document.getElementById("pathsrc"),o=document.getElementById("path"),n=document.getElementById("ip");""==t.value.trim()?e.files.length>0&&Object.values(e.files).forEach(e=>{const t={name:e.name,size:e.size,ip:n.value,path:o.value};socket.emit("upload",{metaData:t,file:e},e=>{console.log(e)})}):$.ajax({url:"/upload-path",method:"get",data:{src:t.value.trim(),des:o.value.trim(),ip:n.value},success:function(e){console.log(e),addToConsole(`Uploading ${e.files.length} files to ${n.value}`)}})}),socket.on("connect",()=>{console.log(`Socket connected to ${socketUrl}`),clearInterval(pingInterval),loadServerList()}),socket.on("sendAllRooms",e=>{serverList=e,serverListContainer.innerHTML="",e.forEach(e=>{appendServerIp(e.ip)})}),socket.on("device-disconnected",e=>{const t=$(`label[for="server-${e.ip.replace(/\./g,"")}"]`);t.removeClass("text-success").addClass("text-danger").text(e.ip),$(`#server-${e.ip.replace(/\./g,"")}`).prop("disabled",!0).prop("checked",!1),addToConsole(`${e.ip} has disconnected`)}),socket.on("device-connected",e=>{serverList.push(e),appendServerIp(e.ip),$(`#server-${e.ip.replace(/\./g,"")}`).prop("disabled",!1),addToConsole(`${e.ip} has connected`)}),socket.on("serverResponded",e=>{let t=Math.floor((e.time-e.pingTime)/100);const o=$(`label[for="server-${e.ip.replace(/\./g,"")}"]`);o.removeClass("text-danger").addClass("text-success").text(`${e.ip} - ${t}ms`)}),socket.on("uploadFailed",e=>{console.log(e);const t=e.data;addToConsole(`❌ Destination : ${t.ip} File : ${t.fileName} Failed : ${e.message}`)}),socket.on("uploadSuccess",e=>{console.log(e);const t=e.data;addToConsole(`✔ Destination : ${t.ip} File : ${t.fileName}`)});